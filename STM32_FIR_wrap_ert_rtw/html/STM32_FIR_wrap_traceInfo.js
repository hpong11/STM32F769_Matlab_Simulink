function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "STM32_FIR_wrap"};
	this.sidHashMap["STM32_FIR_wrap"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "STM32_FIR_wrap:45"};
	this.sidHashMap["STM32_FIR_wrap:45"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<Root>/Audio Input"] = {sid: "STM32_FIR_wrap:17"};
	this.sidHashMap["STM32_FIR_wrap:17"] = {rtwname: "<Root>/Audio Input"};
	this.rtwnameHashMap["<Root>/Audio Output"] = {sid: "STM32_FIR_wrap:6"};
	this.sidHashMap["STM32_FIR_wrap:6"] = {rtwname: "<Root>/Audio Output"};
	this.rtwnameHashMap["<Root>/Constant"] = {sid: "STM32_FIR_wrap:52"};
	this.sidHashMap["STM32_FIR_wrap:52"] = {rtwname: "<Root>/Constant"};
	this.rtwnameHashMap["<Root>/Data Type Conversion"] = {sid: "STM32_FIR_wrap:43"};
	this.sidHashMap["STM32_FIR_wrap:43"] = {rtwname: "<Root>/Data Type Conversion"};
	this.rtwnameHashMap["<Root>/Gain"] = {sid: "STM32_FIR_wrap:41"};
	this.sidHashMap["STM32_FIR_wrap:41"] = {rtwname: "<Root>/Gain"};
	this.rtwnameHashMap["<Root>/Gain1"] = {sid: "STM32_FIR_wrap:42"};
	this.sidHashMap["STM32_FIR_wrap:42"] = {rtwname: "<Root>/Gain1"};
	this.rtwnameHashMap["<Root>/MATLAB Function"] = {sid: "STM32_FIR_wrap:45"};
	this.sidHashMap["STM32_FIR_wrap:45"] = {rtwname: "<Root>/MATLAB Function"};
	this.rtwnameHashMap["<Root>/Matrix Concatenate"] = {sid: "STM32_FIR_wrap:8"};
	this.sidHashMap["STM32_FIR_wrap:8"] = {rtwname: "<Root>/Matrix Concatenate"};
	this.rtwnameHashMap["<Root>/Memory"] = {sid: "STM32_FIR_wrap:46"};
	this.sidHashMap["STM32_FIR_wrap:46"] = {rtwname: "<Root>/Memory"};
	this.rtwnameHashMap["<Root>/Memory1"] = {sid: "STM32_FIR_wrap:53"};
	this.sidHashMap["STM32_FIR_wrap:53"] = {rtwname: "<Root>/Memory1"};
	this.rtwnameHashMap["<Root>/Scope"] = {sid: "STM32_FIR_wrap:55"};
	this.sidHashMap["STM32_FIR_wrap:55"] = {rtwname: "<Root>/Scope"};
	this.rtwnameHashMap["<Root>/Selector"] = {sid: "STM32_FIR_wrap:19"};
	this.sidHashMap["STM32_FIR_wrap:19"] = {rtwname: "<Root>/Selector"};
	this.rtwnameHashMap["<Root>/Selector1"] = {sid: "STM32_FIR_wrap:38"};
	this.sidHashMap["STM32_FIR_wrap:38"] = {rtwname: "<Root>/Selector1"};
	this.rtwnameHashMap["<S1>:1"] = {sid: "STM32_FIR_wrap:45:1"};
	this.sidHashMap["STM32_FIR_wrap:45:1"] = {rtwname: "<S1>:1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
