function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "AnalogBilinearParaEq"};
	this.sidHashMap["AnalogBilinearParaEq"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<Root>/Audio Input"] = {sid: "AnalogBilinearParaEq:17"};
	this.sidHashMap["AnalogBilinearParaEq:17"] = {rtwname: "<Root>/Audio Input"};
	this.rtwnameHashMap["<Root>/Audio Output"] = {sid: "AnalogBilinearParaEq:6"};
	this.sidHashMap["AnalogBilinearParaEq:6"] = {rtwname: "<Root>/Audio Output"};
	this.rtwnameHashMap["<Root>/Biquad Filter"] = {sid: "AnalogBilinearParaEq:56"};
	this.sidHashMap["AnalogBilinearParaEq:56"] = {rtwname: "<Root>/Biquad Filter"};
	this.rtwnameHashMap["<Root>/Constant"] = {sid: "AnalogBilinearParaEq:69"};
	this.sidHashMap["AnalogBilinearParaEq:69"] = {rtwname: "<Root>/Constant"};
	this.rtwnameHashMap["<Root>/Constant1"] = {sid: "AnalogBilinearParaEq:72"};
	this.sidHashMap["AnalogBilinearParaEq:72"] = {rtwname: "<Root>/Constant1"};
	this.rtwnameHashMap["<Root>/Constant10"] = {sid: "AnalogBilinearParaEq:81"};
	this.sidHashMap["AnalogBilinearParaEq:81"] = {rtwname: "<Root>/Constant10"};
	this.rtwnameHashMap["<Root>/Constant2"] = {sid: "AnalogBilinearParaEq:73"};
	this.sidHashMap["AnalogBilinearParaEq:73"] = {rtwname: "<Root>/Constant2"};
	this.rtwnameHashMap["<Root>/Constant3"] = {sid: "AnalogBilinearParaEq:74"};
	this.sidHashMap["AnalogBilinearParaEq:74"] = {rtwname: "<Root>/Constant3"};
	this.rtwnameHashMap["<Root>/Constant4"] = {sid: "AnalogBilinearParaEq:75"};
	this.sidHashMap["AnalogBilinearParaEq:75"] = {rtwname: "<Root>/Constant4"};
	this.rtwnameHashMap["<Root>/Constant5"] = {sid: "AnalogBilinearParaEq:76"};
	this.sidHashMap["AnalogBilinearParaEq:76"] = {rtwname: "<Root>/Constant5"};
	this.rtwnameHashMap["<Root>/Constant6"] = {sid: "AnalogBilinearParaEq:77"};
	this.sidHashMap["AnalogBilinearParaEq:77"] = {rtwname: "<Root>/Constant6"};
	this.rtwnameHashMap["<Root>/Constant7"] = {sid: "AnalogBilinearParaEq:78"};
	this.sidHashMap["AnalogBilinearParaEq:78"] = {rtwname: "<Root>/Constant7"};
	this.rtwnameHashMap["<Root>/Constant8"] = {sid: "AnalogBilinearParaEq:79"};
	this.sidHashMap["AnalogBilinearParaEq:79"] = {rtwname: "<Root>/Constant8"};
	this.rtwnameHashMap["<Root>/Constant9"] = {sid: "AnalogBilinearParaEq:80"};
	this.sidHashMap["AnalogBilinearParaEq:80"] = {rtwname: "<Root>/Constant9"};
	this.rtwnameHashMap["<Root>/Gain"] = {sid: "AnalogBilinearParaEq:41"};
	this.sidHashMap["AnalogBilinearParaEq:41"] = {rtwname: "<Root>/Gain"};
	this.rtwnameHashMap["<Root>/Gain1"] = {sid: "AnalogBilinearParaEq:42"};
	this.sidHashMap["AnalogBilinearParaEq:42"] = {rtwname: "<Root>/Gain1"};
	this.rtwnameHashMap["<Root>/Hight"] = {sid: "AnalogBilinearParaEq:50"};
	this.sidHashMap["AnalogBilinearParaEq:50"] = {rtwname: "<Root>/Hight"};
	this.rtwnameHashMap["<Root>/Low"] = {sid: "AnalogBilinearParaEq:49"};
	this.sidHashMap["AnalogBilinearParaEq:49"] = {rtwname: "<Root>/Low"};
	this.rtwnameHashMap["<Root>/Matrix Concatenate"] = {sid: "AnalogBilinearParaEq:8"};
	this.sidHashMap["AnalogBilinearParaEq:8"] = {rtwname: "<Root>/Matrix Concatenate"};
	this.rtwnameHashMap["<Root>/Multiport Switch"] = {sid: "AnalogBilinearParaEq:58"};
	this.sidHashMap["AnalogBilinearParaEq:58"] = {rtwname: "<Root>/Multiport Switch"};
	this.rtwnameHashMap["<Root>/Peak1"] = {sid: "AnalogBilinearParaEq:48"};
	this.sidHashMap["AnalogBilinearParaEq:48"] = {rtwname: "<Root>/Peak1"};
	this.rtwnameHashMap["<Root>/Peak2"] = {sid: "AnalogBilinearParaEq:51"};
	this.sidHashMap["AnalogBilinearParaEq:51"] = {rtwname: "<Root>/Peak2"};
	this.rtwnameHashMap["<Root>/Peak3"] = {sid: "AnalogBilinearParaEq:52"};
	this.sidHashMap["AnalogBilinearParaEq:52"] = {rtwname: "<Root>/Peak3"};
	this.rtwnameHashMap["<Root>/Radio Button"] = {sid: "AnalogBilinearParaEq:70"};
	this.sidHashMap["AnalogBilinearParaEq:70"] = {rtwname: "<Root>/Radio Button"};
	this.rtwnameHashMap["<Root>/Selector1"] = {sid: "AnalogBilinearParaEq:38"};
	this.sidHashMap["AnalogBilinearParaEq:38"] = {rtwname: "<Root>/Selector1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
